@inherits ComponentBase
@inject ISnackbar _snackBar;

<EditForm Model="@category" OnValidSubmit="CreateCategory" style="height:500px">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem>
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Name" @bind-Value="category.Name" For="@(() => category.Name)" Required="true" RequiredError="Kategori Adını Boş Geçemezsiniz!" />
                    <MudTextField Label="Description" Class="mt-3" @bind-Value="category.Description" For="@(() => category.Description)" Required="true" RequiredError="Açıklama Alanını Boş Geçemezsiniz." />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Dark" Class="ml-auto">Ekle</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    [Inject]
    public ICategoryService CategoryService { get; set; }
    [Inject]
    public IToaster Toaster { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Parameter]
    public EventCallback OnAddedItem { get; set; }


    CreateCategory category = new();

    private async Task CreateCategory()
    {
        var data = await CategoryService.AddCategory(category);
        _snackBar.Add($"{data.Data.Name} Sisteme Eklendi", Severity.Success);
        await OnAddedItem.InvokeAsync();
        category.Description = String.Empty;
        category.Name = String.Empty;
    }
}
